{{!
  Copyright (c) HashiCorp, Inc.
  SPDX-License-Identifier: BUSL-1.1
~}}

{{page-title "User Settings"}}
<section class="section">
  <Hds::Alert @type="inline" @title="Local Storage Settings" as |A|>
    <A.Title>User Settings</A.Title>
    <A.Description>These settings will be saved to your browser settings via Local Storage.</A.Description>
    <A.Generic>
      <Hds::Separator/>
      <Hds::Form::Toggle::Group as |G|>
        <G.ToggleField
          name="word-wrap"
          @id="word-wrap"
          checked={{this.wordWrap}}
          {{on "change" (action (mut this.wordWrap) (not this.wordWrap))}}
        as |F|>
          <F.Label>Word Wrap</F.Label>
          <F.HelperText>Wrap lines of text in logs and exec terminals in the UI</F.HelperText>
        </G.ToggleField>
        <G.ToggleField
          name="jostle"
          @id="jostle"
          checked={{this.liveUpdateJobsIndex}}
          {{on "change" (action (mut this.liveUpdateJobsIndex) (not this.liveUpdateJobsIndex))}}
        as |F|>
          <F.Label>Live Updates to <LinkTo @route="jobs.index">Jobs Index</LinkTo></F.Label>
          <F.HelperText>When enabled, new or removed jobs will pop into and out of view on your jobs page. When disabled, you will be notified that changes are pending.</F.HelperText>
        </G.ToggleField>
      </Hds::Form::Toggle::Group>

    <Hds::Separator/>
    <Hds::Form::Label @controlId="control-ID">
      Default Namespace
    </Hds::Form::Label>
    <Hds::Dropdown @height="300px" @listPosition="bottom-left" as |dd|>
      <dd.ToggleButton
        @text={{this.namespaceDropdownLabel}}
        @color="secondary"
      />
      <dd.Header @hasDivider={{true}}>
        <Hds::Form::TextInput::Base
          @type="search"
          placeholder="Filter namespaces"
          @value={{this.namespaceFilter}}
          {{autofocus}}
          {{on "input" (action (mut this.namespaceFilter) value="target.value") }}
          data-test-namespace-filter-searchbox
        />
      </dd.Header>
      {{#each this.namespaceOptions as |option|}}
        <dd.Checkbox
          {{on "change" (fn this.setDefaultNamespace option)}}
          @value={{option.label}}
          checked={{option.checked}}
          data-test-dropdown-option={{option.label}}
        >
          {{option.label}} {{#if (includes option.id this.namespaceDefaults)}}(default){{/if}}
        </dd.Checkbox>
      {{else}}
        <dd.Generic data-test-dropdown-empty>
          No namespaces match {{this.namespaceFilter}}
        </dd.Generic>
      {{/each}}

      <dd.Footer>
        {{#if this.namespaceOptions.length}}
          <Hds::Button
            @text="Include {{this.namespaceOptions.length}} {{pluralize "namespace" this.namespaceOptions.length}}"
            @isFullWidth={{true}}
            @color="secondary"
            @size="small"
            {{on "click" (action this.setAllNamespacesAsDefault)}}
          />
        {{/if}}
      </dd.Footer>

    </Hds::Dropdown>
    <Hds::Form::HelperText>
      You can set which namespaces are selected by default in the UI.
      {{#if this.system.agentDefaults.Namespace}}
        <br />
        Your agent configuration has set the default namespace to <strong>{{this.system.agentDefaults.Namespace}}</strong>.
      {{/if}}
      {{#if this.system.userDefaultNamespace}}
        <br />
        Your user settings have set the default namespace to <strong>{{this.system.userDefaultNamespace}}</strong>.
      {{/if}}
    </Hds::Form::HelperText>

    </A.Generic>
  </Hds::Alert>
</section>
